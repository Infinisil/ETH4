* Walkthrough

** Actions

#+BEGIN_SRC example
Foo(int i) {
1: int x := 5
2: int y := 7
3: if ( 0 <= i) {
4:   y := y + 1
5:   i := i - 1
6:   goto 3=
   }
7:}
#+END_SRC

Analyzer framework (e.g. Soot) with control flow graph =>

- (1, x := 5, 2)
- (2, y := 7, 3)
- (3, 0 <= i, 4)
- (3, 0 > i, 7)
- (4, y := y + 1, 5)
- (5, i := i - 1, 6)
- (6, goto 3, 3)

Label 3 reached by multiple points

** Abstract Map

| label | abstract element |
|     1 | a1               |
|     2 | a2               |
|     3 | a3               |
|     4 | a4               |
|     5 | a5               |
|     6 | a6               |
|     7 | a7               |

** Abstract Function $F^#$

$$F^#(m)1 = \top$$ Because $l$ is the initial label.
$$F^#(m)2 = \[\[\x\coloneqq 5\]\](m(1))$$
$$F^#(m)3 = \[\[y\coloneqq 7\]\](m(2)) \sqcup \[\[goto 3\]\](m(6))$$
$$F^#(m)4 = \[\[0\leq i\]\](m(3))$$
$$F^#(m)5 = \[\[y\coloneqq y+1\]\](m(4))$$
$$F^#(m)6 = \[\[ i\coloneqq i-1\]\](m(5))$$
$$F^#(m)7 = \[\[0 > i\]\](m(3))$$

Need to define what each statement does and plug it into $\[\[action\]\]$.

Libraries define effect of actions and domain operators

- $\sqcup$, $\sqcap$, $\top$, $\bot$, $\sqsubseteq$
- All actions are undefined: $=$, $<$, $\leq$, $!$, $~$, $<<$, $&&$, $||$. Frameworks such as \textsc{Apron}, \textsc{Eline}, \textsc{New Polka} define them.

* Cheat Sheet: Connecting Math and Analysis

| Mathematical Concept   | Use in Static Analysis                                                      |
| Complete Lattice       | Defines Abstract Demain and ensure joins exist                              |
| Joins ($\sqcup$)       | Combines facts arriving at a program point                                  |
| Bottom ($\bot$)        | Used for initialization of all but initial elements                         |
| Top ($\top$)$          | Used for initialization of initial elements                                 |
| Widening               | Used to guarantee analysis termination                                      |
| Function Approximation | Critical to make sure abstract semantics approximate the concrete semantics |
| Fixed Points           | This is what is computed by the analysis                                    |
| Tarski's Theorem       | Ensures fixed points exist                                                  |

